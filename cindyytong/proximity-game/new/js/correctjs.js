//Initialize functions:

$(document).ready(function(){
//when start button is clicked, layout for first question is presented (map is generated and form for submission)
//insertForm, insertSubmit, insertNext
      $("#start").click(function(){
        //create random array of 10
          generateRandomArray();
        //remove instructions
            $("#instructions").html("");
            $("div").removeClass("jumbotron");
        //add form for question submission and buttons next and submit
            $("#insertAddress").append(addressDisplayed);
            $("#insertForm").html(formString);
            $("#insertSubmit").html(submitString);
            $("#insertHint").html(hintString);
            $("#insertNext").html(nextString);
            $("#start").hide();  
            initialize(); 
            displayHintCount();  


            //when submit clicked
          $("#submit").click(function(){
            //refresh the counter on the hint button
            initialize();
            countHint=0;
            //check if answer is correct
            checkAnswer();
            $("#answer").val("");
              displayWinnings();
              resetHint();
            //hits submit after 12 seconds
            setTimeout(function() { 
               document.getElementById("submit").click();
            }, 15000);
        });

          //call click event on submit button after 10 seconds
          // var that = document.getElementById("submit");
          setTimeout(function() { 
               document.getElementById("submit").click();
            }, 20000);

          //

          $("#next").click(function(){
            initialize();
            countHint = 0;
            resetHint();
            displayWinnings();
            setTimeout(function() { 
               document.getElementById("submit").click();
            }, 15000);

        });
        });

});

//GLOBAL
//elements to be added to the page after start button is clicked on
var formString = "<label for='answer'>Name the restaurant depicted below in the map</label> <input type='answer' class='form-control' id='answer' placeholder='Restaurant Name'>";

var submitString = "<a href='#' class='action-button animate red' id = 'submit'>Submit</a>";

var nextString = "<a href='#' class='action-button animate blue' id = 'next'>Next</a>";

var hintString = "<a href='#' class='action-button animate green' id = 'hint'>Hint</a>";

var resetString = "<a href='#' class='action-button animate green' id = 'reset'>Play Again</a>";

var scoreRight = 0;
var count = 0;
var solution;
var solutionLower;
var solutionArray = [];
var userInput;
var userInputLower;
var userInputArray =[];
var indexNumberUsed = [];
var arrRandomTen = [];
var addressDisplayed;
//for hint displayed
var hintDisplayed = [];
var hintDisplayedLast;
var concatenateHintDisplayed;
var countHint = 0;
var solutionInLetters;

function resetHint(){
    document.getElementById("hint").textContent = "Hint";
    countHint=0;
}

//function creates 10 random numbers between 1 to 30 and returns them in array of numbers 

function generateRandomArray(){
  while(arrRandomTen.length<10){
    var randomNumber = Math.ceil(Math.random()*10);
    var found = false;
    for(var i = 0; i<arrRandomTen.length; i++){
      if(arrRandomTen[i]==randomNumber){
        found=true; 
        break;
        }
      }
      if(!found)arrRandomTen[arrRandomTen.length]=randomNumber;
    }
    
  return arrRandomTen;
}
//function checks if user's answer is correct (matches against what google provides); it also updates the solution array and userinput array

function checkAnswer(userInput, solution){
    userInput = $('#answer').val();
    userInputLower = String(userInput).toLowerCase();
    if(solutionLower==userInputLower){
      scoreRight++;
    } else {
      console.log("You answered incorrectly");
    }
    solutionArray.push(solution);
    userInputArray.push(userInput);
}

//function creates google map with one location identified based on random number generated by randomten
function initialize() {

//player runs through game five times 
if(count < 5){
      //default location of where map displays
      var generalAssembly = new google.maps.LatLng(37.790841,-122.401280);

      var map = new google.maps.Map(document.getElementById('map'), {
        center: generalAssembly,
        zoom: 16,
        zoomControl: true,
        scaleControl: true
      });

      // Specify location, radius and place types for your Places API search.
      var request = {
        location: generalAssembly,
        radius: '300',
        types: ['restaurant']
      };

    //turn off labels from map
      var stylesArray = [
           {
             featureType: "administrative",
             elementType: "labels",
             stylers: [
               { visibility: "off" }
             ]
           },
           {
             featureType: "poi",
             elementType: "labels",
             stylers: [
               { visibility: "off" }
             ]
           }
         ];

      map.setOptions({styles: stylesArray});

      // Create the PlaceService and send the request.
      // Handle the callback with an anonymous function.
    
      var service = new google.maps.places.PlacesService(map);
      service.nearbySearch(request, function(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
            var place = results[arrRandomTen[count]];

            //set the solution for the current place to the name
            solution = results[arrRandomTen[count]].name;
            // solution = place["name"];
            solutionLower = String(solution).toLowerCase();
            //push the answer to the solution array
            solutionArray.push(solutionLower);

            //split name into individual letters to display hint
            solutionInLetters = solution.split("");
            
            //get the address of the solution to be displayed as hint
            addressDisplayed = String(results[arrRandomTen[count]].vicinity);
            // alert(addressDisplayed);
            $("#insertAddress").html("The address of this restaurant is: " + addressDisplayed);

            var marker = new google.maps.Marker({
                map: map,
                position: place.geometry.location
              });

            //update the count and use this value for place index
            count++;
            indexNumberUsed.push(arrRandomTen[count]);
            arrRandomTen.splice(count,1);
            }
      });
  }
}

function displayWinnings(){
  // after five questions, end game and display map with all solutions, put back label on map, hide submit and next buttons
  if(count === 5){
    console.log("End of game");
    $("#insertForm").html("");
    $("#insertHint").html("");
    $("#insertSubmit").html("");
    $("#insertNext").html("");
    $("#results").html("<p>You answered " + scoreRight + " correctly!. Click on the markers to view the answers.</p>");
    $("#insertResetGame").html(resetString);
    $("#insertAddress").html('');
    resetGame();

    //generate map with all places
    var generalAssembly = new google.maps.LatLng(37.790841,-122.401280);
    var map = new google.maps.Map(document.getElementById('map'), {
        center: generalAssembly,
        zoom: 15,
        zoomControl: true,
        scaleControl: true
      });

    var request = {
        location: generalAssembly,
        radius: '300',
        types: ['restaurant']
      };
    var stylesArray = [
           {
             featureType: "poi",
             elementType: "labels",
             stylers: [
               { visibility: "on" }
             ]
           }
         ];

      map.setOptions({styles: stylesArray});

    var service = new google.maps.places.PlacesService(map);
      service.nearbySearch(request, function(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {
          var y;
          var len = indexNumberUsed.length;
          var markers = [];
          for(y = 0; y<len; y++){
            var place = results[indexNumberUsed[y]];
            var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location,
              name: place.name,
            });

            markers.push(marker);

            google.maps.event.addListener(markers[y], 'click', makeMarkerEvent(map, markers[y]));

            //
          //
          }
        }
      });
  }
}

//END OF FUNCTION INITIALIZE 

//generates how many times the hint button has been pressed

function displayHintCount(){
  $("#hint").click(function(){
      countHint++;
      hintDisplayed = [];
      hintDisplayedLast="";
      if (countHint<solutionInLetters.length){
        for(var i = 0; i<countHint; i++){
          hintDisplayed.push(solutionInLetters[i]);
        }
          document.getElementById("hint").textContent = "The name begins with " + hintDisplayed.join("");
        
      } else{
        resetHint();
      }
  });
}

//Set the click event for marker
function makeMarkerEvent(map, marker){
  return function(){
    $("#restaurantName").html("<p>" + marker.name + "</p>");
  };
}

function resetGame(){
  $("#reset").click(function(){
    location.reload();
  });
}