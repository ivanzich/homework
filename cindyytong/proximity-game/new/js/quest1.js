//elements to be added to the page after start button is clicked on

var formString = "<label for='answer'>Name the restaurant depicted below in the map</label> <input type='answer' class='form-control' id='answer' placeholder='Restaurant Name'>";

var submitString = "<button type='button' id = 'submit' class='btn btn-success viewquestion'>Submit</button>";

var nextString = "<button type='button' id = 'next' class='btn btn-success viewquestion'>Next</button>";

//Initialize functions:

$(document).ready(function(){
//when start button is clicked, layout for first question is presented (map is generated and form for submission)
//insertForm, insertSubmit, insertNext
      $("#start").click(function(){
        //create random array of 10
          generateRandomArray();
        //remove instructions
            $("#instructions").html("");
        //add form for question submission and buttons next and submit
            $("#insertForm").html(formString);
            $("#insertSubmit").html(submitString);
            $("#insertNext").html(nextString);
            $("#start").hide();  
            initialize();   

            //when submit clicked
          $("#submit").click(function(){
          initialize();
        });

          $("#next").click(function(){
          initialize();
        });
        });



//creates google map once anything with class viewquestion is clicked (start, next, submit buttons) 
    // google.maps.event.addDomListener(document.getElementsByClassName('viewquestion'), 'click', initialize);

});

//global variables used to keep track of store
var scoreRight = 0;
var count = 0;
var solutionArray = [];
var userInputArray =[];

//function creates 10 random numbers between 1 to 30 and returns them in array of numbers 
var arrRandomTen = [];
    function generateRandomArray(){
      console.log("generateRandomArray called");
      while(arrRandomTen.length<10){
        var randomNumber = Math.ceil(Math.random()*19)
        var found = false;
        for(var i = 0; i<arrRandomTen.length; i++){
          if(arrRandomTen[i]==randomNumber){
            found=true; 
            break};
          }
          if(!found)arrRandomTen[arrRandomTen.length]=randomNumber;
        }
        
      return arrRandomTen;
    }


//function creates google map with one location identified based on random number generated by randomten
function initialize() {

      //default location of where map displays
      var generalAssembly = new google.maps.LatLng(37.790841,-122.401280);

      var map = new google.maps.Map(document.getElementById('map'), {
        center: generalAssembly,
        zoom: 15,
        scrollwheel: false,
        
      });

      // Specify location, radius and place types for your Places API search.
      var request = {
        location: generalAssembly,
        radius: '300',
        types: ['restaurant']
      };

    //turn off labels from map
      var stylesArray = [
           {
             featureType: "administrative",
             elementType: "labels",
             stylers: [
               { visibility: "off" }
             ]
           },
           {
             featureType: "poi",
             elementType: "labels",
             stylers: [
               { visibility: "off" }
             ]
           }

         ];

      map.setOptions({styles: stylesArray});

      // Create the PlaceService and send the request.
      // Handle the callback with an anonymous function.
    
      var service = new google.maps.places.PlacesService(map);
      service.nearbySearch(request, function(results, status) {
        if (status == google.maps.places.PlacesServiceStatus.OK) {

          var place = results[0];
          console.log(results);
          // console.log(place);
  //????????????????skips places that has geometry attribute of undefined & fix error of getting object of undefined
          // if(typeof(place.geometry) === undefined){
          //   var place = results[arrRandomTen[1]];
          // } 

          //set the solution for the current place to the name
          var solution = place["name"];
          console.log(solution);
          //push the answer to the solution array
          solutionArray.push(solution);
      
          var marker = new google.maps.Marker({
              map: map,
              position: place.geometry.location
            });

          //update the count and use this value for place index
          count++;
          }
        // }
      });
}


//END OF FUNCTION INITIALIZE -------------------------------------



//For places
//results[0].name OR place.name= name of the restaurant
//var marker = new google.maps.Marker({
        //   map: map,
        //   position: place.geometry.location
        // });